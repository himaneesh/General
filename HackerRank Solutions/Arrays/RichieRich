package com.hp.hr;

import java.util.Scanner;

public class RichieRich {

	static String richieRich(String s, int n, int k) {

		StringBuilder sbf = new StringBuilder(s);
		int i = 0;
		int j = sbf.length() - 1;
		int nonPalinPair = 0;
		int unusedK;
		while (i < n / 2) {
			if (Character.getNumericValue(sbf.charAt(i)) != Character.getNumericValue(sbf.charAt(j))) {
				nonPalinPair++;
			}

			i++;
			j--;
		}
		unusedK = k - nonPalinPair;

		i = 0;
		j = sbf.length() - 1;
		if (k < nonPalinPair) {
			return "-1";
		} else {
			while (i <= j) {
				if (Character.getNumericValue(sbf.charAt(i)) > Character.getNumericValue(sbf.charAt(j))) {
					if (unusedK != 0 && Character.getNumericValue(sbf.charAt(i)) != 9
							&& Character.getNumericValue(sbf.charAt(i)) != 9) {
						sbf.setCharAt(i, '9');
						sbf.setCharAt(j, '9');
						unusedK--;
						k -= 2;
					} else {
						sbf.setCharAt(j, sbf.charAt(i));
						k -= 1;
					}

				} else if (Character.getNumericValue(sbf.charAt(i)) < Character.getNumericValue(sbf.charAt(j))) {

					if (unusedK != 0) {
						sbf.setCharAt(i, '9');
						sbf.setCharAt(j, '9');
						unusedK--;
						k -= 2;
					} else {
						sbf.setCharAt(i, sbf.charAt(j));
						k -= 1;
					}
				} else if (Character.getNumericValue(sbf.charAt(i)) == Character.getNumericValue(sbf.charAt(j))) {

					if (unusedK > 1 && Character.getNumericValue(sbf.charAt(i)) != 9 && i != j) {
						sbf.setCharAt(i, '9');
						sbf.setCharAt(j, '9');
						unusedK -= 2;
						k -= 2;
					} else if (i == j && unusedK >= 1) {
						sbf.setCharAt(i, '9');
						unusedK--;
						k -= 1;
					}
				}
				i++;
				j--;

			}
		}
		return sbf.toString();

	}

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		int k = in.nextInt();
		String s = in.next();
		in.close();
		String result = richieRich(s, n, k);
		System.out.println(result);
	}
}
