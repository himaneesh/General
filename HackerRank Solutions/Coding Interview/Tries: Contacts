import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

 class Solution {

    
    TrieNode root;
	public Solution() {
		root = new TrieNode();
	}

    	public class TrieNode{
		Map<Character,TrieNode> children;
		int size;
		public TrieNode(){
			children = new HashMap<Character, TrieNode>(); 
			size=0;
		}
	}
    
    	public void insert(String s) {
		char charArray[] = s.toCharArray();
		TrieNode current= root;
		for(Character c : charArray) {
			if(current.children!=null && current.children.get(c)!=null) {
				current=current.children.get(c);
			}
			else{
				TrieNode node = new TrieNode();
				current.children.put(c, node);
				current=node;
			}
			current.size++;
		}
	
	}


	

	public int find(String s) {
		char charArray[] = s.toCharArray();
		TrieNode current= root;
		for(Character c : charArray) {
			if(current.children!=null && current.children.get(c)!=null) {
				current=current.children.get(c);
			}
			else {
				return 0;
			}
		
		}
		return current.size;
	}
         public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        Solution tri = new Solution();
        for(int a0 = 0; a0 < n; a0++){
            String op = in.next();
            String contact = in.next();
            if(op.equalsIgnoreCase("find")) {
            	int count = tri.find(contact);
            	System.out.println(count);
            }else {
            	tri.insert(contact);
            }
        }
    }
}
