/*
Detect a cycle in a linked list. Note that the head pointer may be 'null' if the list is empty.

A Node is defined as: 
    class Node {
        int data;
        Node next;
    }
*/

boolean hasCycle(Node head) {
        
    if(null==head|| null==head.next)
        return false;
   
        Node   tortoise=head.next;
       Node    hare=head.next.next;
        while(tortoise!=hare){
            if(null==tortoise || null==hare)return false;
           tortoise=tortoise.next;
           hare=hare.next.next;
            
        }
      
            return true;
        
    }
